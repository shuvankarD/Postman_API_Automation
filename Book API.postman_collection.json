{
	"info": {
		"_postman_id": "bb183d90-5f46-4623-a2f0-18e3f878cc0f",
		"name": "Book API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27791504"
	},
	"item": [
		{
			"name": "API Status",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\",\r",
							" function () {\r",
							"    pm.response.to.have.status(200);\r",
							" }\r",
							");\r",
							"\r",
							"const response = pm.response.json();\r",
							"\r",
							"console.log(response.status)\r",
							"\r",
							"pm.test(\"Status should be OK\",() =>{\r",
							"  \r",
							"   pm.expect(response.status).to.eql(\"OK\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/status",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"status"
					]
				}
			},
			"response": []
		},
		{
			"name": "Authorization",
			"request": {
				"auth": {
					"type": "bearer"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"clientName\": \"Shuvankar\",\r\n   \"clientEmail\": \"shuvankard32@gmail.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api-clients/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api-clients",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Book list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const response = pm.response.json();\r",
							"const nonFinction = response.filter((book)=> book.available === true);\r",
							"\r",
							"const book = nonFinction[0];\r",
							"\r",
							"if(book){\r",
							"pm.environment.set(\"bookId\", book.id);\r",
							"}\r",
							"\r",
							"pm.test(\"Book Found\", () =>{\r",
							"\r",
							"   pm.expect(book).to.be.an('object');\r",
							"\r",
							"   pm.expect(book.available).to.be.true;\r",
							"\r",
							"   pm.expect(book.type).to.eql(\"non-fiction\");\r",
							"\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "type",
						"value": "non-fiction",
						"type": "text",
						"disabled": true
					}
				],
				"url": {
					"raw": "{{baseUrl}}/books?type=non-fiction",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"books"
					],
					"query": [
						{
							"key": "type",
							"value": "non-fiction"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Single Book",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}//books/:bookId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"",
						"books",
						":bookId"
					],
					"variable": [
						{
							"key": "bookId",
							"value": "5"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Submit an order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", () => {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"const response = pm.response.json();\r",
							"\r",
							"pm.globals.set(\"orderId\", response.orderId);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\r\n    \"bookId\":{{bookId}},\r\n    \"customerName\":\"{{$randomFullName}}\"\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/orders",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"",
						"orders"
					],
					"query": [
						{
							"key": "bookId",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all books orders",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const response = pm.response.json();\r",
							"\r",
							"console.log(response);\r",
							"\r",
							"pm.test(\"Status should be OK\", () => {\r",
							"    pm.expect(response.status).to.eql('OK');\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\r\n    \"bookId\":{{bookId}},\r\n    \"customerName\":\"{{$randomFullName}}\"\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}//orders",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"",
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a Single Order",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\r\n    \"bookId\":3,\r\n    \"customerName\":\"{{$randomFullName}}\"\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}//orders/:orderId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"",
						"orders",
						":orderId"
					],
					"variable": [
						{
							"key": "orderId",
							"value": "{{orderId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update a Order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", () => {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"customerName\": \"Shuvankar {{$randomLastName}}\"\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}//orders/:orderId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"",
						"orders",
						":orderId"
					],
					"variable": [
						{
							"key": "orderId",
							"value": "cirW-VBBtAd1z10yqZJ4E"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete an Order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"customerName\": \"Dash Bapu\"\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}//orders/:orderId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"",
						"orders",
						":orderId"
					],
					"variable": [
						{
							"key": "orderId",
							"value": "-rlLqAcNSzJldm0FAst0u"
						}
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{accessToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://simple-books-api.glitch.me",
			"type": "default"
		},
		{
			"key": "accessToken",
			"value": "fc46383406ac31d6e312e205047e0ef2a2a7455fb7485ebe97c09899d9d636e1",
			"type": "string"
		},
		{
			"key": "orderId",
			"value": "_pjK8_BHvaTl0DokmbmmI",
			"type": "default"
		}
	]
}